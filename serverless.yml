service: serverless-rest-api-with-pynamodb

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt

provider:
  name: aws
  runtime: python2.7
  region: eu-central-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "*"

functions:
  create:
    handler: cars/create.create
    events:
      - http:
          path: cars
          method: post
          cors: true

  list:
    handler: cars/list.car_list
    events:
      - http:
          path: cars
          method: get
          cors: true

  get:
    handler: cars/get.get
    events:
      - http:
          path: cars/{car_id}
          method: get
          cors: true
          integration: lambda
          request:
            paths:
              car_id: true

  update:
    handler: cars/update.update
    events:
      - http:
          path: cars/{car_id}
          method: put
          cors: true
          integration: lambda
          request:
            paths:
              car_id: true
  delete:
    handler: cars/delete.delete
    events:
      - http:
          path: cars/{car_id}
          method: delete
          cors: true
          integration: lambda
          request:
            paths:
              car_id: true

resources:
  Resources:
    CarsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: car_id
            AttributeType: S
          - AttributeName: vin
            AttributeType: S
        KeySchema:
          -
            AttributeName: car_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        GlobalSecondaryIndexes:
        - IndexName: vin_index
          KeySchema:
          - AttributeName: vin
            KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput:
            ReadCapacityUnits: '1'
            WriteCapacityUnits: '1'
